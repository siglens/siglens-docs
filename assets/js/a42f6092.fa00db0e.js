"use strict";(self.webpackChunksiglens_docs=self.webpackChunksiglens_docs||[]).push([[2425],{6796:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>m,frontMatter:()=>r,metadata:()=>a,toc:()=>o});var l=s(5893),i=s(1151);const r={},t="makemv",a={id:"spl-docs/makemv-command",title:"makemv",description:"Description",source:"@site/docs/spl-docs/makemv-command.md",sourceDirName:"spl-docs",slug:"/spl-docs/makemv-command",permalink:"/siglens-docs/spl-docs/makemv-command",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"head command",permalink:"/siglens-docs/spl-docs/head-command"},next:{title:"rare Command",permalink:"/siglens-docs/spl-docs/rare-command"}},d={},o=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Required Arguments",id:"required-arguments",level:2},{value:"field",id:"field",level:3},{value:"Optional Arguments",id:"optional-arguments",level:2},{value:"delim",id:"delim",level:3},{value:"tokenizer",id:"tokenizer",level:3},{value:"allowempty",id:"allowempty",level:3},{value:"setsv",id:"setsv",level:3},{value:"Examples",id:"examples",level:2},{value:"1. Use a comma to separate field values",id:"1-use-a-comma-to-separate-field-values",level:3},{value:"2. Use a colon delimiter and allow empty values",id:"2-use-a-colon-delimiter-and-allow-empty-values",level:3},{value:"3. Use a regular expression to separate values",id:"3-use-a-regular-expression-to-separate-values",level:3},{value:"4. Use a delimiter with multiple characters",id:"4-use-a-delimiter-with-multiple-characters",level:3},{value:"Use-Case Example",id:"use-case-example",level:3}];function c(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"makemv",children:"makemv"}),"\n",(0,l.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Converts a single valued field into a multivalue field by splitting the values on a string delimiter or by using a regular expression. The delimiter can be a multicharacter delimiter."}),"\n",(0,l.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,l.jsxs)(n.p,{children:["makemv ",(0,l.jsx)(n.br,{}),"\n","[delim=<string> or tokenizer=<string>] ",(0,l.jsx)(n.br,{}),"\n","[allowempty=<bool>] ",(0,l.jsx)(n.br,{}),"\n","[setsv=<bool>] ",(0,l.jsx)(n.br,{}),"\n","<field>"]}),"\n",(0,l.jsx)(n.h2,{id:"required-arguments",children:"Required Arguments"}),"\n",(0,l.jsx)(n.h3,{id:"field",children:"field"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Syntax"}),": ",(0,l.jsx)(n.code,{children:"<field>"})," ",(0,l.jsx)(n.br,{}),"\n",(0,l.jsx)(n.strong,{children:"Description"}),": The name of a field to generate the multivalues from."]}),"\n",(0,l.jsx)(n.h2,{id:"optional-arguments",children:"Optional Arguments"}),"\n",(0,l.jsx)(n.h3,{id:"delim",children:"delim"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Syntax"}),": ",(0,l.jsx)(n.code,{children:"delim=<string>"})," ",(0,l.jsx)(n.br,{}),"\n",(0,l.jsx)(n.strong,{children:"Description"}),": A string value used as a delimiter. Splits the values in ",(0,l.jsx)(n.code,{children:"field"})," on every occurrence of this delimiter. ",(0,l.jsx)(n.br,{}),"\n",(0,l.jsx)(n.strong,{children:"Default"}),': A single space (" ").']}),"\n",(0,l.jsx)(n.h3,{id:"tokenizer",children:"tokenizer"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Syntax"}),": ",(0,l.jsx)(n.code,{children:"tokenizer=<string>"})," ",(0,l.jsx)(n.br,{}),"\n",(0,l.jsx)(n.strong,{children:"Description"}),": A regular expression with a capturing group that is repeat-matched against the values in the field. For each match, the first capturing group is used as a value in the newly created multivalue field."]}),"\n",(0,l.jsx)(n.h3,{id:"allowempty",children:"allowempty"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Syntax"}),": ",(0,l.jsx)(n.code,{children:"allowempty=<bool>"})," ",(0,l.jsx)(n.br,{}),"\n",(0,l.jsx)(n.strong,{children:"Description"}),": Specifies whether to permit empty string values in the multivalue field. When using ",(0,l.jsx)(n.code,{children:"allowempty=true"}),", repeats of the delimiter string produce empty string values in the multivalue field. For example if ",(0,l.jsx)(n.code,{children:'delim=","'})," and ",(0,l.jsx)(n.code,{children:'field="a,,b"'}),", by default does not produce any value for the empty string. When using the ",(0,l.jsx)(n.code,{children:"tokenizer"})," argument, zero length matches produce empty string values. By default they produce no values. ",(0,l.jsx)(n.br,{}),"\n",(0,l.jsx)(n.strong,{children:"Default"}),": false"]}),"\n",(0,l.jsx)(n.h3,{id:"setsv",children:"setsv"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Syntax"}),": ",(0,l.jsx)(n.code,{children:"setsv=<bool>"})," ",(0,l.jsx)(n.br,{}),"\n",(0,l.jsx)(n.strong,{children:"Description"}),": If true, the ",(0,l.jsx)(n.code,{children:"makemv"})," command combines the decided values of the field into a single value, which is set on the same field. (The simultaneous existence of a multivalue and a single value for the same field is a problematic aspect of this flag.) ",(0,l.jsx)(n.br,{}),"\n",(0,l.jsx)(n.strong,{children:"Default"}),": false"]}),"\n",(0,l.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,l.jsx)(n.h3,{id:"1-use-a-comma-to-separate-field-values",children:"1. Use a comma to separate field values"}),"\n",(0,l.jsx)(n.p,{children:'For sendmail search results, separate the values of "senders" into multiple values. Display the top values.'}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'eventtype="sendmail" | makemv delim="," senders | top senders\n'})}),"\n",(0,l.jsx)(n.h3,{id:"2-use-a-colon-delimiter-and-allow-empty-values",children:"2. Use a colon delimiter and allow empty values"}),"\n",(0,l.jsx)(n.p,{children:'Separate the value of "product_info" into multiple values.'}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'... | makemv delim=":" allowempty=true product_info\n'})}),"\n",(0,l.jsx)(n.h3,{id:"3-use-a-regular-expression-to-separate-values",children:"3. Use a regular expression to separate values"}),"\n",(0,l.jsxs)(n.p,{children:["The following search creates a result and adds three values to the ",(0,l.jsx)(n.code,{children:"my_multival"})," field. The ",(0,l.jsx)(n.code,{children:"makemv"})," command is used to separate the values in the field by using a regular expression."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'| makeresults\n| eval my_multival="one,two,three"\n| makemv tokenizer="([^,]+),?" my_multival\n'})}),"\n",(0,l.jsx)(n.h3,{id:"4-use-a-delimiter-with-multiple-characters",children:"4. Use a delimiter with multiple characters"}),"\n",(0,l.jsxs)(n.p,{children:["Separate the value of ",(0,l.jsx)(n.code,{children:"log_data"})," into multiple values using a delimiter with multiple characters."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'... | makemv delim=";|;" log_data\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Explanation:"})}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["The ",(0,l.jsx)(n.code,{children:"makemv"})," command uses the delimiter ",(0,l.jsx)(n.code,{children:'";|;"'})," to split the ",(0,l.jsx)(n.code,{children:"log_data"})," field into multiple values."]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example log entry:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'log_data="error;|;warning;|;info;|;debug"\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Output:"})}),"\n",(0,l.jsx)(n.p,{children:"The output for the above command would be:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"log_data\nerror\nwarning\ninfo\ndebug\n"})}),"\n",(0,l.jsx)(n.h3,{id:"use-case-example",children:"Use-Case Example"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parsing Email Recipients"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Problem:"}),' A company\'s email server logs contain a field called "recipients" that stores all email recipients as a comma-separated string. The security team wants to analyze email distribution patterns, but they need each recipient as a separate value for proper analysis.']}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Solution:"})," The ",(0,l.jsx)(n.code,{children:"makemv"}),' command can be used to split the "recipients" field into multiple values, allowing for individual analysis of each recipient.']}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example log entry:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'timestamp="2024-07-12 09:15:23" sender="john@company.com" recipients="alice@company.com,bob@company.com,carol@external.com" subject="Project Update"\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"SPL command:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'index=email_logs \n| makemv delim="," recipients \n| stats count by sender, recipients\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Explanation:"})}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"The search starts by looking at the email logs index."}),"\n",(0,l.jsxs)(n.li,{children:["The ",(0,l.jsx)(n.code,{children:"makemv"}),' command splits the "recipients" field into multiple values using the comma as a delimiter.']}),"\n",(0,l.jsxs)(n.li,{children:["The ",(0,l.jsx)(n.code,{children:"stats"})," command then counts occurrences for each unique combination of sender and recipient."]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>a,a:()=>t});var l=s(7294);const i={},r=l.createContext(i);function t(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);