"use strict";(self.webpackChunksiglens_docs=self.webpackChunksiglens_docs||[]).push([[5379],{2849:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var i=n(5893),s=n(1151);const r={},a="Metricbeat",c={id:"metric-ingestion/metricbeat",title:"Metricbeat",description:"Ingesting metrics into Siglens using Metricbeat",source:"@site/docs/metric-ingestion/metricbeat.md",sourceDirName:"metric-ingestion",slug:"/metric-ingestion/metricbeat",permalink:"/siglens-docs/metric-ingestion/metricbeat",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Vector Metrics",permalink:"/siglens-docs/metric-ingestion/vector-metrics"},next:{title:"Open Telemetry",permalink:"/siglens-docs/metric-ingestion/open-telemetry"}},o={},l=[{value:"1. Install Metricbeat",id:"1-install-metricbeat",level:2},{value:"Linux based Systems",id:"linux-based-systems",level:3},{value:"Windows",id:"windows",level:3},{value:"2. Configure Metricbeat",id:"2-configure-metricbeat",level:2},{value:"Sample Configuration",id:"sample-configuration",level:3},{value:"3. Run Metricbeat",id:"3-run-metricbeat",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"metricbeat",children:"Metricbeat"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"Ingesting metrics into Siglens using Metricbeat"})}),"\n",(0,i.jsx)(t.p,{children:"Metricbeat is a lightweight, open-source shipper from Elastic that collects metrics from your systems and services. Metricbeat simplifies the collection and transport of your systems and services metrics."}),"\n",(0,i.jsx)(t.p,{children:"In this guide, we will walk through the process of using Metricbeat to send metrics to Siglens."}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["\u26a0\ufe0f"," ",(0,i.jsx)(t.strong,{children:"Note:"})," For Linux Systems, the Metricbeat will not work due to the Go version used in the specific Metricbeat version, which prevents the creation of a new thread on Linux OS. The related issue can be found ",(0,i.jsx)(t.a,{href:"https://github.com/docker-library/golang/issues/467",children:"here"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"1-install-metricbeat",children:"1. Install Metricbeat"}),"\n",(0,i.jsxs)(t.p,{children:["Download the ",(0,i.jsx)(t.a,{href:"https://www.elastic.co/downloads/past-releases/metricbeat-oss-7-9-3",children:(0,i.jsx)(t.code,{children:"metricbeat-oss-7.9.3"})})," version and extract it to the appropriate directory based on your OS."]}),"\n",(0,i.jsx)(t.h3,{id:"linux-based-systems",children:"Linux based Systems"}),"\n",(0,i.jsx)(t.p,{children:"Run either of the following commands based on your linx distribution:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"sudo dpkg -i metricbeat-oss-7.9.3-amd64.deb\n"})}),"\n",(0,i.jsx)(t.p,{children:"OR"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"tar xzvf metricbeat-oss-7.9.3-linux-x86_64.tar.gz\n"})}),"\n",(0,i.jsx)(t.h3,{id:"windows",children:"Windows"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Download the Zip version, extract the contents into ",(0,i.jsx)(t.code,{children:"C:\\Program Files"}),", rename the directory to Metricbeat, and run the following commands as an Administrator to install Metricbeat as a Windows service:"]}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"PS > cd 'C:\\Program Files\\Metricbeat'\nPS C:\\Program Files\\Metricbeat> .\\install-service-metricbeat.ps1\n"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["More details about the installation process can be found ",(0,i.jsx)(t.a,{href:"https://www.elastic.co/guide/en/beats/metricbeat/7.9/metricbeat-installation-configuration.html",children:"here"})]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"2-configure-metricbeat",children:"2. Configure Metricbeat"}),"\n",(0,i.jsx)(t.h3,{id:"sample-configuration",children:"Sample Configuration"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"metricbeat.modules:\n  - module: nginx\n    metricsets: ['stubstatus']\n    enabled: true\n    # The interval in seconds to poll each endpoint.\n    period: 10s\n\n    # Nginx hosts\n    hosts: ['http://127.0.0.1']\n\n    # Path to server status. Default nginx_status\n    server_status_path: 'nginx_status'\n\noutput.elasticsearch:\n  # Replace with your custom Elasticsearch endpoint\n  hosts: ['http://localhost:8081/elastic/']\n  index: 'metricbeat-ind-0' # Custom index name\n\n# Disable template management\nsetup.template.enabled: false\n\n# Disable ilm\nsetup.ilm.enabled: false\n# logging.level: debug\n"})}),"\n",(0,i.jsx)(t.h2,{id:"3-run-metricbeat",children:"3. Run Metricbeat"}),"\n",(0,i.jsx)(t.p,{children:"For Linux, navigate to the Metricbeat directory and run"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"sudo metricbeat -e -c /home/metricbeat-config/metricbeat.yaml\n"})}),"\n",(0,i.jsxs)(t.p,{children:["For Windows, open a PowerShell prompt as an Administrator, navigate to ",(0,i.jsx)(t.code,{children:"C:\\Program Files\\Metricbeat"}),", and run"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:".\\metricbeat.exe -e -c D:\\Siglens\\metricbeat_elasticsearch.yml\n"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"-e"})," argument is optional and is used for logging."]})]})}function h(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>a});var i=n(7294);const s={},r=i.createContext(s);function a(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);