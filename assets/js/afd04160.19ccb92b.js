"use strict";(self.webpackChunksiglens_docs=self.webpackChunksiglens_docs||[]).push([[2351],{2524:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>a});var s=n(5893),r=n(1151);const i={},o="Open Telemetry",l={id:"metric-ingestion/open-telemetry",title:"Open Telemetry",description:"OpenTelemetry provides a single set of APIs, libraries, agents, and collector services to capture distributed traces and metrics from your application.",source:"@site/docs/metric-ingestion/open-telemetry.md",sourceDirName:"metric-ingestion",slug:"/metric-ingestion/open-telemetry",permalink:"/siglens-docs/metric-ingestion/open-telemetry",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Metricbeat",permalink:"/siglens-docs/metric-ingestion/metricbeat"},next:{title:"Instrumentation for Traces",permalink:"/siglens-docs/category/instrumentation-for-traces"}},c={},a=[];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"open-telemetry",children:"Open Telemetry"}),"\n",(0,s.jsx)(t.p,{children:"OpenTelemetry provides a single set of APIs, libraries, agents, and collector services to capture distributed traces and metrics from your application."}),"\n",(0,s.jsx)(t.p,{children:"In this guide, we will walk through the process of using OpenTelemetry to send metrics to Siglens."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"Ingesting metrics into Siglens using Open Telemetry"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"To ingest traces, you can run siglens and follow the below steps."}),"\n",(0,s.jsx)(t.li,{children:"If Siglens is running with ingestPort: 8081 in the server.yaml file, you'll follow these steps:"}),"\n"]}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["git clone ",(0,s.jsx)(t.a,{href:"https://github.com/open-telemetry/opentelemetry-demo.git",children:"https://github.com/open-telemetry/opentelemetry-demo.git"})]}),"\n",(0,s.jsx)(t.li,{children:"cd opentelemetry-demo/"}),"\n",(0,s.jsxs)(t.li,{children:["Update ",(0,s.jsx)(t.code,{children:"src/otelcollector/otelcol-config-extras.yml"})," to be:"]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'exporters:\notlphttp/siglens:\n    endpoint: "http://host.docker.internal:8081/otlp"\n\nservice:\npipelines:\n    traces:\n    exporters: [spanmetrics, otlphttp/siglens]\n'})}),"\n",(0,s.jsxs)(t.ol,{start:"4",children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Run the command ",(0,s.jsx)(t.code,{children:"make start"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"After the docker containers start and you wait a few seconds, you should see traces getting ingested into siglens."}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>l,a:()=>o});var s=n(7294);const r={},i=s.createContext(r);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);