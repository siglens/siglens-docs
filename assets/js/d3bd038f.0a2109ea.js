"use strict";(self.webpackChunksiglens_docs=self.webpackChunksiglens_docs||[]).push([[3337],{2247:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var s=t(5893),r=t(1151);const a={},o=".NET App",i={id:"instrument-traces/dotnet-app",title:".NET App",description:"Auto-instrument sample .NET App for traces",source:"@site/docs/instrument-traces/dotnet-app.md",sourceDirName:"instrument-traces",slug:"/instrument-traces/dotnet-app",permalink:"/siglens-docs/instrument-traces/dotnet-app",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Python App",permalink:"/siglens-docs/instrument-traces/python-app"},next:{title:"Javascript App",permalink:"/siglens-docs/instrument-traces/js-app"}},l={},c=[{value:"Auto-instrument sample .NET App for traces",id:"auto-instrument-sample-net-app-for-traces",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Quickstart",id:"quickstart",level:2},{value:"More Details",id:"more-details",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"net-app",children:".NET App"}),"\n",(0,s.jsx)(n.h2,{id:"auto-instrument-sample-net-app-for-traces",children:"Auto-instrument sample .NET App for traces"}),"\n",(0,s.jsx)(n.p,{children:"In this tutorial, we will go through the steps to auto-instrument a .NET app to send traces to SigLens."}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["You need to have the .NET SDK installed. You can install ",(0,s.jsx)(n.code,{children:"dotnet"})," using a package manager like homebrew or download it ",(0,s.jsx)(n.a,{href:"https://dotnet.microsoft.com/en-us/download/dotnet",children:"here"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"quickstart",children:"Quickstart"}),"\n",(0,s.jsx)(n.p,{children:"Start SigLens:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -L https://siglens.com/install.sh | sh\n"})}),"\n",(0,s.jsx)(n.p,{children:"Setup a .NET app:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"mkdir dotnet-example\ncd dotnet-example\ndotnet new web\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Replace the default ",(0,s.jsx)(n.code,{children:"Program.cs"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'echo \'using OpenTelemetry.Exporter;\nusing OpenTelemetry.Trace;\n\nvar builder = WebApplication.CreateBuilder(args);\n\nbuilder.Services.AddOpenTelemetry()\n    .WithTracing(tracing => tracing\n        .AddAspNetCoreInstrumentation()\n        .AddOtlpExporter()\n    );\n\nvar app = builder.Build();\n\napp.MapGet("/", () => "Hello World!");\n\napp.Run();\' > Program.cs\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Replace the default ",(0,s.jsx)(n.code,{children:"Properties/launchSettings.json"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'echo \'{\n  "$schema": "http://json.schemastore.org/launchsettings.json",\n  "profiles": {\n    "http": {\n      "commandName": "Project",\n      "dotnetRunMessages": true,\n      "launchBrowser": true,\n      "applicationUrl": "http://localhost:8080",\n      "environmentVariables": {\n        "ASPNETCORE_ENVIRONMENT": "Development"\n      }\n    }\n  }\n}\' > Properties/launchSettings.json\n'})}),"\n",(0,s.jsx)(n.p,{children:"Install OpenTelemetry dependencies:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"dotnet add package OpenTelemetry\ndotnet add package OpenTelemetry.Exporter.OpenTelemetryProtocol\ndotnet add package OpenTelemetry.Extensions.Hosting\ndotnet add package OpenTelemetry.Instrumentation.Runtime\ndotnet add package OpenTelemetry.Instrumentation.AspNetCore\ndotnet add package OpenTelemetry.AutoInstrumentation\n"})}),"\n",(0,s.jsx)(n.p,{children:"Run the app:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'OTEL_METRICS_EXPORTER=none \\\nOTEL_LOGS_EXPORTER=none \\\nOTEL_EXPORTER_OTLP_ENDPOINT="http://localhost:8081/otlp" \\\nOTEL_EXPORTER_OTLP_PROTOCOL="http/protobuf" \\\nOTEL_SERVICE_NAME="my-service" \\\ndotnet run\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Go to the app at ",(0,s.jsx)(n.a,{href:"http://localhost:8080",children:"http://localhost:8080"})," and refresh the page a few times (you should see ",(0,s.jsx)(n.code,{children:"Hello World!"}),") to send traces to SigLens.\nAfter about 10 seconds, you should see the traces on SigLens on ",(0,s.jsx)(n.a,{href:"http://localhost:5122",children:"http://localhost:5122"})," then going to Tracing -> Search Traces and clicking the Find Traces button."]}),"\n",(0,s.jsx)(n.h2,{id:"more-details",children:"More Details"}),"\n",(0,s.jsx)(n.p,{children:"For auto-instrumenting your own .NET app, you'll follow a similar procedure.\nIn particular, you will:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Add the following to your program:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"using OpenTelemetry.Exporter;\nusing OpenTelemetry.Trace;\n\nvar builder = WebApplication.CreateBuilder(args);\n\nbuilder.Services.AddOpenTelemetry()\n    .WithTracing(tracing => tracing\n        .AddAspNetCoreInstrumentation()\n        .AddOtlpExporter()\n    );\n\nvar app = builder.Build();\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Install OpenTelemetry dependencies into your project:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"dotnet add package OpenTelemetry\ndotnet add package OpenTelemetry.Exporter.OpenTelemetryProtocol\ndotnet add package OpenTelemetry.Extensions.Hosting\ndotnet add package OpenTelemetry.Instrumentation.Runtime\ndotnet add package OpenTelemetry.Instrumentation.AspNetCore\ndotnet add package OpenTelemetry.AutoInstrumentation\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Run your app using OTEL environment variables:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'OTEL_METRICS_EXPORTER=none \\\nOTEL_LOGS_EXPORTER=none \\\nOTEL_EXPORTER_OTLP_ENDPOINT="http://localhost:8081/otlp" \\\nOTEL_EXPORTER_OTLP_PROTOCOL="http/protobuf" \\\nOTEL_SERVICE_NAME="my-service" \\\ndotnet run\n'})}),"\n",(0,s.jsx)(n.p,{children:"Once you're on the Tracing tab of SigLens, you can search the traces and see health metrics and graphs for each service."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"search-dotnet",src:t(4555).Z+"",width:"2880",height:"1630"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"metrics-dotnet",src:t(4202).Z+"",width:"2870",height:"1627"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dotnet-graph-1",src:t(3938).Z+"",width:"2865",height:"1599"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dotnet-graph-2",src:t(5577).Z+"",width:"2864",height:"1600"})})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},3938:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/dotnet-graph-1-024cf336abe9480772a5d33dfd4d2765.png"},5577:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/dotnet-graph-2-7aa6284df473b1618b433fa9643c8075.png"},4202:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/dotnet-metrics-c50b532a944386cc6fbb521bb21c5d8c.png"},4555:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/dotnet-search-4d2eb8917a1b67c1de22a622a5e6e845.png"},1151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>o});var s=t(7294);const r={},a=s.createContext(r);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);