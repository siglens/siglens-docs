"use strict";(self.webpackChunksiglens_docs=self.webpackChunksiglens_docs||[]).push([[1865],{9577:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var i=t(5893),r=t(1151);const s={},o="Vector Metrics",c={id:"metric-ingestion/vector-metrics",title:"Vector Metrics",description:"Ingesting metrics into SigLens using Vector",source:"@site/docs/metric-ingestion/vector-metrics.md",sourceDirName:"metric-ingestion",slug:"/metric-ingestion/vector-metrics",permalink:"/siglens-docs/metric-ingestion/vector-metrics",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Metric Ingestion",permalink:"/siglens-docs/category/metric-ingestion"},next:{title:"OpenTelemetry",permalink:"/siglens-docs/metric-ingestion/open-telemetry"}},a={},l=[{value:"1. Install Vector",id:"1-install-vector",level:3},{value:"2. Configure Vector Metrics",id:"2-configure-vector-metrics",level:3},{value:"3. Run Vector",id:"3-run-vector",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"vector-metrics",children:"Vector Metrics"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Ingesting metrics into SigLens using Vector"})}),"\n",(0,i.jsx)(n.h3,{id:"1-install-vector",children:"1. Install Vector"}),"\n",(0,i.jsxs)(n.p,{children:["Begin by installing Vector using the instructions provided ",(0,i.jsx)(n.a,{href:"/siglens-docs/log-ingestion/vector#1-installation",children:"here"}),". Once installed, you can refer back to this guide for configuration and starting Vector."]}),"\n",(0,i.jsx)(n.h3,{id:"2-configure-vector-metrics",children:"2. Configure Vector Metrics"}),"\n",(0,i.jsx)(n.p,{children:"Create a vector config file with the SigLens Vector sink."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Note: This sample configuration file is for exporting Nginx metrics to SigLens."})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",metastring:'title="vector.yaml"',children:"# The directory used for persisting Vector state, such as on-disk buffers, file checkpoints, and more. Please make sure the Vector project has write permissions to this directory.\ndata_dir: /var/lib/vector\n\n# Sources Reference\nsources:\n  nginx_metrics:\n    type: 'nginx_metrics'\n    # A list of NGINX instances to scrape metrics from.\n    # Each endpoint must be a valid HTTP/HTTPS URI pointing to an NGINX instance that has the ngx_http_stub_status_module module enabled.\n    endpoints:\n      - 'http://127.0.0.1/nginx_status'\n    namespace: 'nginx'\n    # The interval in seconds to poll each endpoint.\n    scrape_interval_secs: 5\n\nsinks:\n  siglens:\n    type: http\n    inputs:\n      - nginx_metrics\n    uri: http://localhost:8081/otsdb/api/put\n    encoding:\n      codec: json\n"})}),"\n",(0,i.jsx)(n.p,{children:"Please note that you might need to add transforms to your Vector configuration according to the structure of your data to ensure it is processed correctly."}),"\n",(0,i.jsxs)(n.p,{children:["For in-depth information on Vector configuration, visit the ",(0,i.jsx)(n.a,{href:"https://vector.dev/docs/reference/configuration/",children:"official vector documentation"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"3-run-vector",children:"3. Run Vector"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"vector --config vector.yaml\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>o});var i=t(7294);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);