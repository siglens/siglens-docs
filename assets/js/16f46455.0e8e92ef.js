"use strict";(self.webpackChunksiglens_docs=self.webpackChunksiglens_docs||[]).push([[2829],{9395:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>o,frontMatter:()=>l,metadata:()=>r,toc:()=>d});var i=n(5893),t=n(1151);const l={},a="Aggregate Functions",r={id:"spl-docs/aggregate-functions/agg-functions",title:"Aggregate Functions",description:"This list includes functions that perform statistical calculations over groups of data.",source:"@site/docs/spl-docs/aggregate-functions/agg-functions.md",sourceDirName:"spl-docs/aggregate-functions",slug:"/spl-docs/aggregate-functions/agg-functions",permalink:"/siglens-docs/spl-docs/aggregate-functions/agg-functions",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Aggregate Functions",permalink:"/siglens-docs/category/aggregate-functions"},next:{title:"SigLens as Prometheus Data Source in Grafana",permalink:"/siglens-docs/grafana-integrations/prometheus-data-source"}},c={},d=[{value:"<strong>avg(&lt;value&gt;)</strong>",id:"avgvalue",level:2},{value:"Usage",id:"usage",level:3},{value:"Example",id:"example",level:3},{value:"Use-Case Example",id:"use-case-example",level:3},{value:"<strong>min(&lt;value&gt;)</strong>",id:"minvalue",level:2},{value:"Usage",id:"usage-1",level:3},{value:"Example",id:"example-1",level:3},{value:"Use-Case Example",id:"use-case-example-1",level:3},{value:"<strong>max(&lt;value&gt;)</strong>",id:"maxvalue",level:2},{value:"Usage",id:"usage-2",level:3},{value:"Example",id:"example-2",level:3},{value:"Use-Case Example",id:"use-case-example-2",level:3},{value:"<strong>range(&lt;value&gt;)</strong>",id:"rangevalue",level:2},{value:"Usage",id:"usage-3",level:3},{value:"Example",id:"example-3",level:3},{value:"Detailed Example",id:"detailed-example",level:3},{value:"Use-Case Example",id:"use-case-example-3",level:3},{value:"<strong>sum(&lt;value&gt;)</strong>",id:"sumvalue",level:2},{value:"Usage",id:"usage-4",level:3},{value:"Example",id:"example-4",level:3},{value:"Use-Case Example",id:"use-case-example-4",level:3},{value:"<strong>count(&lt;value&gt;) or c(&lt;value&gt;)</strong>",id:"countvalue-or-cvalue",level:2},{value:"Usage",id:"usage-5",level:3},{value:"Example",id:"example-5",level:3},{value:"Use-Case Example",id:"use-case-example-5",level:3},{value:"<strong>distinct_count(&lt;value&gt;) or dc(&lt;value&gt;)</strong>",id:"distinct_countvalue-or-dcvalue",level:2},{value:"Usage",id:"usage-6",level:3},{value:"Example",id:"example-6",level:3},{value:"Use-Case Example",id:"use-case-example-6",level:3},{value:"<strong>varp(&lt;value&gt;)</strong>",id:"varpvalue",level:2},{value:"Usage",id:"usage-7",level:3},{value:"Example",id:"example-7",level:3},{value:"Use-Case Example",id:"use-case-example-7",level:3},{value:"<strong>latest(&lt;value&gt;)</strong>",id:"latestvalue",level:2},{value:"Usage",id:"usage-8",level:3},{value:"Example",id:"example-8",level:3},{value:"Use-Case Example",id:"use-case-example-8",level:3},{value:"<strong>latest_time(&lt;value&gt;)</strong>",id:"latest_timevalue",level:2},{value:"Usage",id:"usage-9",level:3},{value:"Example",id:"example-9",level:3},{value:"Use-Case Example",id:"use-case-example-9",level:3},{value:"<strong>earliest(&lt;value&gt;)</strong>",id:"earliestvalue",level:2},{value:"Usage",id:"usage-10",level:3},{value:"Example",id:"example-10",level:3},{value:"Use-Case Example",id:"use-case-example-10",level:3},{value:"<strong>earliest_time(&lt;value&gt;)</strong>",id:"earliest_timevalue",level:2},{value:"Usage",id:"usage-11",level:3},{value:"Example",id:"example-11",level:3},{value:"Use-Case Example",id:"use-case-example-11",level:3},{value:"<strong>sumsq(&lt;value&gt;)</strong>",id:"sumsqvalue",level:2},{value:"Usage",id:"usage-12",level:3},{value:"Example",id:"example-12",level:3},{value:"Use-Case Example",id:"use-case-example-12",level:3},{value:"<strong>perc&lt;percentile&gt;(&lt;value&gt;)</strong>",id:"percpercentilevalue",level:2},{value:"Description",id:"description",level:3},{value:"Usage",id:"usage-13",level:3},{value:"Differences between SigLens and Excel percentile algorithms",id:"differences-between-siglens-and-excel-percentile-algorithms",level:3},{value:"SigLens algorithm with more than 1000 distinct values",id:"siglens-algorithm-with-more-than-1000-distinct-values",level:3},{value:"Basic examples",id:"basic-examples",level:3},{value:"<strong>median(&lt;value&gt;)</strong>",id:"medianvalue",level:2},{value:"Description",id:"description-1",level:3},{value:"Usage",id:"usage-14",level:3},{value:"Basic examples",id:"basic-examples-1",level:3}];function h(e){const s={a:"a",blockquote:"blockquote",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{id:"aggregate-functions",children:"Aggregate Functions"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.em,{children:"This list includes functions that perform statistical calculations over groups of data."})}),"\n",(0,i.jsx)(s.h2,{id:"avgvalue",children:(0,i.jsx)(s.strong,{children:"avg(<value>)"})}),"\n",(0,i.jsx)(s.p,{children:"This function returns the average, or mean, of the values in a field."}),"\n",(0,i.jsx)(s.h3,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(s.p,{children:["You can use this function with the ",(0,i.jsx)(s.code,{children:"stats"})," and ",(0,i.jsx)(s.code,{children:"timechart"})," commands."]}),"\n",(0,i.jsx)(s.h3,{id:"example",children:"Example"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["The following example returns the average of the values in the ",(0,i.jsx)(s.code,{children:"latitude"})," field for each distinct value in the ",(0,i.jsx)(s.code,{children:"city"})," field:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | stats avg(latitude) BY city\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["The following example displays a timechart of the average of the ",(0,i.jsx)(s.code,{children:"latency"})," field by city:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | timechart avg(latency) BY city\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"use-case-example",children:"Use-Case Example"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Calculate Average Response Time for Web Services"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Problem:"})," A web administrator wants to determine the average response time for different web services to identify which services might need optimization."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Solution:"})," Use the ",(0,i.jsx)(s.code,{children:"stats"})," command with the ",(0,i.jsx)(s.code,{children:"avg"})," function to calculate the average response time for each web service."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Implementation:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"index=weblog sourcetype=access_combined\n| stats avg(response_time) AS avg_response_time BY service\n| sort - avg_response_time\n"})}),"\n",(0,i.jsx)(s.h2,{id:"minvalue",children:(0,i.jsx)(s.strong,{children:"min(<value>)"})}),"\n",(0,i.jsx)(s.p,{children:"This function returns the minimum value in a field."}),"\n",(0,i.jsx)(s.h3,{id:"usage-1",children:"Usage"}),"\n",(0,i.jsxs)(s.p,{children:["This function processes field values as numbers if possible, otherwise processes field values as strings. You can use this function with the ",(0,i.jsx)(s.code,{children:"stats"})," and ",(0,i.jsx)(s.code,{children:"timechart"})," commands. This command cannot be used on non-numeric fields."]}),"\n",(0,i.jsx)(s.h3,{id:"example-1",children:"Example"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["The following example calculates the minimum value of the ",(0,i.jsx)(s.code,{children:"latitude"})," field for locations in the southern hemisphere (latitude < 0) and groups the results by ",(0,i.jsx)(s.code,{children:"weekday"}),":"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | stats min(eval(latitude < 0)) AS min BY weekday\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["The following example finds the minimum ",(0,i.jsx)(s.code,{children:"latency"})," value:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | stats min(latency)\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"The following example displays a timechart of the minimum latency over time for each city:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | timechart min(latency) BY city\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"use-case-example-1",children:"Use-Case Example"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Identify the Minimum CPU Utilization per Minute per Server"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Problem:"})," You aim to monitor the performance of various servers in your network by identifying the minimum CPU utilization recorded, to ensure that no server is showing abnormal behavior which could indicate issues."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Solution:"})," Utilize the ",(0,i.jsx)(s.code,{children:"stats"})," command in conjunction with the ",(0,i.jsx)(s.code,{children:"min"})," function to calculate the minimum CPU utilization for each server. This method allows for a straightforward identification of servers that may be underperforming or experiencing issues, by highlighting instances of unusually low CPU utilization."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Implementation:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | stats min(cpu_utilization) AS MinCPUUtilization BY host\n"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Explanation:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["This command calculates the minimum CPU Utilization (",(0,i.jsx)(s.code,{children:"cpu_utilization"})," field) for each server (",(0,i.jsx)(s.code,{children:"host"})," field). The ",(0,i.jsx)(s.code,{children:"min"})," function is used to find the lowest value of CPU utilization for each unique server. This approach is useful for monitoring server performance and quickly identifying any servers that may be experiencing issues."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"maxvalue",children:(0,i.jsx)(s.strong,{children:"max(<value>)"})}),"\n",(0,i.jsx)(s.p,{children:"This function returns the maximum value in a field."}),"\n",(0,i.jsx)(s.h3,{id:"usage-2",children:"Usage"}),"\n",(0,i.jsxs)(s.p,{children:["This function processes field values as numbers if possible, otherwise processes field values as strings. You can use this function with the ",(0,i.jsx)(s.code,{children:"stats"})," and ",(0,i.jsx)(s.code,{children:"timechart"})," commands. This command cannot be used on non-numeric fields."]}),"\n",(0,i.jsx)(s.h3,{id:"example-2",children:"Example"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["The following example returns the maximum value of the ",(0,i.jsx)(s.code,{children:"latency"})," field:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | stats max(latency)\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["The following example calculates the maximum value of the ",(0,i.jsx)(s.code,{children:"latitude"})," field for locations in the northern hemisphere (latitude > 0) and groups the results by ",(0,i.jsx)(s.code,{children:"weekday"}),":"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | stats max(eval(latitude > 0)) AS max BY weekday\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"The following example displays a timechart of the maximum latency over time for each city:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | timechart max(latency) BY city\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"use-case-example-2",children:"Use-Case Example"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Identify the Maximum CPU Utilization per Server Over Time"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Problem:"})," A system administrator wants to monitor the maximum CPU utilization for each server over time to identify potential overloads."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Solution:"})," Use the ",(0,i.jsx)(s.code,{children:"stats"})," command to calculate the maximum CPU utilization per server. Alternatively, use the ",(0,i.jsx)(s.code,{children:"timechart"})," command to visualize the maximum CPU utilization over time for each server."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsxs)(s.strong,{children:["Implementation with ",(0,i.jsx)(s.code,{children:"stats"})]}),":"]}),"\n",(0,i.jsxs)(s.p,{children:["Assuming the data is structured with fields for ",(0,i.jsx)(s.code,{children:"server"}),", ",(0,i.jsx)(s.code,{children:"time"}),", and ",(0,i.jsx)(s.code,{children:"cpu_usage"}),", the following SPL query calculates the maximum CPU utilization per server:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"index=server_metrics sourcetype=cpu_usage\n| stats max(cpu_usage) AS max_cpu_usage BY server\n"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Explanation:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"This query filters logs to those related to CPU usage metrics."}),"\n",(0,i.jsxs)(s.li,{children:["The ",(0,i.jsx)(s.code,{children:"stats"})," command calculates the maximum ",(0,i.jsx)(s.code,{children:"cpu_usage"})," value for each ",(0,i.jsx)(s.code,{children:"server"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsxs)(s.strong,{children:["Implementation with ",(0,i.jsx)(s.code,{children:"timechart"})]}),":"]}),"\n",(0,i.jsx)(s.p,{children:"To visualize the maximum CPU utilization over time for each server:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"index=server_metrics sourcetype=cpu_usage\n| timechart span=1m max(cpu_usage) BY server\n"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Explanation:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"This query also filters logs to those related to CPU usage metrics."}),"\n",(0,i.jsxs)(s.li,{children:["The ",(0,i.jsx)(s.code,{children:"timechart"})," command creates a time series chart with a 1-minute interval (",(0,i.jsx)(s.code,{children:"span=1m"}),"), showing the maximum ",(0,i.jsx)(s.code,{children:"cpu_usage"})," for each ",(0,i.jsx)(s.code,{children:"server"})," over time."]}),"\n",(0,i.jsx)(s.li,{children:"This visualization helps in identifying trends and potential peaks in CPU utilization across different servers."}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Output:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["The ",(0,i.jsx)(s.code,{children:"stats"})," command output lists each server with its maximum CPU utilization."]}),"\n",(0,i.jsxs)(s.li,{children:["The ",(0,i.jsx)(s.code,{children:"timechart"})," command output will be a time series chart, with time on the x-axis and CPU utilization on the y-axis, displaying lines for each server to indicate how the maximum CPU utilization varies over time."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"rangevalue",children:(0,i.jsx)(s.strong,{children:"range(<value>)"})}),"\n",(0,i.jsx)(s.p,{children:"Returns the difference between the maximum and minimum values in a field."}),"\n",(0,i.jsx)(s.h3,{id:"usage-3",children:"Usage"}),"\n",(0,i.jsxs)(s.p,{children:["The values in the field must be numeric. You can use this function with the ",(0,i.jsx)(s.code,{children:"stats"})," and ",(0,i.jsx)(s.code,{children:"timechart"})," commands."]}),"\n",(0,i.jsx)(s.h3,{id:"example-3",children:"Example"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"The following command calculates the range of latency for each city, providing a simple measure of variability:"}),"\n"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | stats range(latency) AS LatencyRange BY city\n"})}),"\n",(0,i.jsx)(s.h3,{id:"detailed-example",children:"Detailed Example"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"For a more in-depth analysis, suppose you want to analyze network latency across different cities, focusing on peak hours (9 AM to 5 PM) during weekdays. You aim to identify cities with high latency variability and peak latency times:"}),"\n"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:'... | where date_wday!="saturday" AND date_wday!="sunday"\n| where date_hour>=9 AND date_hour<=17\n| eval CityLatency=if(latency>200, "High", "Normal")\n| stats min(latency) AS MinLatency, max(latency) AS MaxLatency, range(latency) AS LatencyRange BY city\n| sort - LatencyRange\n'})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"The following example displays a timechart of the range of latency over time for each city:"}),"\n"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | timechart span=1h range(latency) BY city\n"})}),"\n",(0,i.jsx)(s.h3,{id:"use-case-example-3",children:"Use-Case Example"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Analyze Temperature Fluctuations Across Different Locations"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Problem:"})," A meteorologist wants to identify locations with the highest temperature fluctuations over a 24-hour period."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Solution:"})," Use the ",(0,i.jsx)(s.code,{children:"stats"})," command with the ",(0,i.jsx)(s.code,{children:"range"})," function to calculate the temperature range for each location."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Implementation:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:'index=weather sourcetype=temperature_readings\n| eval hour=strftime(_time, "%H")\n| stats min(temperature) AS min_temp, max(temperature) AS max_temp, range(temperature) AS temp_range BY location\n| sort - temp_range\n'})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Explanation"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"This query filters logs to those containing temperature readings."}),"\n",(0,i.jsxs)(s.li,{children:["The ",(0,i.jsx)(s.code,{children:"eval"})," command extracts the hour from the timestamp."]}),"\n",(0,i.jsxs)(s.li,{children:["The ",(0,i.jsx)(s.code,{children:"stats"})," command calculates the minimum, maximum, and range of temperature for each location."]}),"\n",(0,i.jsx)(s.li,{children:"Results are sorted in descending order of temperature range."}),"\n",(0,i.jsx)(s.li,{children:"The output will show each location with its minimum and maximum temperatures, as well as the temperature range, helping identify areas with the highest temperature fluctuations."}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"sumvalue",children:(0,i.jsx)(s.strong,{children:"sum(<value>)"})}),"\n",(0,i.jsx)(s.p,{children:"This function returns the sum of the values in a field."}),"\n",(0,i.jsx)(s.h3,{id:"usage-4",children:"Usage"}),"\n",(0,i.jsxs)(s.p,{children:["You can use this function with the ",(0,i.jsx)(s.code,{children:"stats"})," and ",(0,i.jsx)(s.code,{children:"timechart"})," commands."]}),"\n",(0,i.jsx)(s.h3,{id:"example-4",children:"Example"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"To calculate the total revenue from subscriptions for all events:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | stats sum(revenue)\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"For summing revenue from subscriptions per month per city:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:'... | stats sum(revenue) AS "total revenue" BY city, month\n'})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"The following example displays a timechart of the sum of revenue over time per city:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | timechart span=1m sum(revenue) BY city\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"use-case-example-4",children:"Use-Case Example"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Calculate Total Sales by Product Category"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Problem:"})," A sales manager wants to determine the total sales for each product category to identify top-performing categories."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Solution:"})," Use the ",(0,i.jsx)(s.code,{children:"stats"})," command with the ",(0,i.jsx)(s.code,{children:"sum"})," function to calculate the total sales for each product category."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Implementation:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"index=sales sourcetype=transactions\n| stats sum(sale_amount) AS total_sales BY product_category\n| sort - total_sales\n"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Explanation"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"This query filters logs to those related to sales transactions."}),"\n",(0,i.jsxs)(s.li,{children:["The ",(0,i.jsx)(s.code,{children:"stats"})," command calculates the sum of sale_amount for each product_category."]}),"\n",(0,i.jsx)(s.li,{children:"Results are sorted in descending order of total sales."}),"\n",(0,i.jsx)(s.li,{children:"The output will show each product category and its corresponding total sales, helping identify the top-performing categories."}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"countvalue-or-cvalue",children:(0,i.jsx)(s.strong,{children:"count(<value>) or c(<value>)"})}),"\n",(0,i.jsx)(s.p,{children:"This function returns the number of occurrences in a field."}),"\n",(0,i.jsx)(s.h3,{id:"usage-5",children:"Usage"}),"\n",(0,i.jsxs)(s.p,{children:["To use this function, you can specify ",(0,i.jsx)(s.code,{children:"count(<value>)"}),", or the abbreviation ",(0,i.jsx)(s.code,{children:"c(<value>)"}),". This function processes field values as strings. You can use this function with the ",(0,i.jsx)(s.code,{children:"stats"})," and ",(0,i.jsx)(s.code,{children:"timechart"})," commands."]}),"\n",(0,i.jsx)(s.h3,{id:"example-5",children:"Example"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Count the number of events in each city:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | stats count by city\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"The following example displays a timechart of the count of events over time, split by city:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | timechart count by city\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"use-case-example-5",children:"Use-Case Example"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Analyze Website Traffic by Source"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Problem:"})," A digital marketer wants to determine which traffic sources are bringing the most visitors to the website."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Solution:"})," Use the ",(0,i.jsx)(s.code,{children:"stats"})," command with the ",(0,i.jsx)(s.code,{children:"count"})," function to count the number of visits from each traffic source."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Implementation:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"index=web sourcetype=access_combined\n| stats count AS visits BY referrer_domain\n| sort - visits\n| head 10\n"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Explanation"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"This query filters logs to those related to web access."}),"\n",(0,i.jsxs)(s.li,{children:["The ",(0,i.jsx)(s.code,{children:"stats"})," command counts the occurrences for each ",(0,i.jsx)(s.code,{children:"referrer_domain"}),"."]}),"\n",(0,i.jsx)(s.li,{children:"Results are sorted in descending order of visit count."}),"\n",(0,i.jsxs)(s.li,{children:["The ",(0,i.jsx)(s.code,{children:"head"})," command limits the output to the top 10 results."]}),"\n",(0,i.jsx)(s.li,{children:"The output will show the top 10 referrer domains and their corresponding visit counts, helping identify the most effective traffic sources."}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"distinct_countvalue-or-dcvalue",children:(0,i.jsx)(s.strong,{children:"distinct_count(<value>) or dc(<value>)"})}),"\n",(0,i.jsx)(s.p,{children:"This function returns the count of distinct values in a field."}),"\n",(0,i.jsx)(s.h3,{id:"usage-6",children:"Usage"}),"\n",(0,i.jsxs)(s.p,{children:["To use this function, you can specify ",(0,i.jsx)(s.code,{children:"distinct_count(<value>)"}),", or the abbreviation ",(0,i.jsx)(s.code,{children:"dc(<value>)"}),". This function processes field values as strings. You can use this function with the ",(0,i.jsx)(s.code,{children:"stats"})," and ",(0,i.jsx)(s.code,{children:"timechart"})," commands."]}),"\n",(0,i.jsx)(s.h3,{id:"example-6",children:"Example"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Calculate the number of unique zip codes from which events are reported:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | stats dc(zip)\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"For each city, calculate the distinct count of zip codes with events reporting latency greater than 100ms:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | where latency > 100 | stats dc(zip) AS UniqueZipCodes by city\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"The following example displays a timechart of the distinct count of zip codes reporting events over time:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | timechart dc(zip)\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"use-case-example-6",children:"Use-Case Example"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Analyze User Engagement Across Different Devices"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Problem:"})," A product manager wants to understand how many unique users are engaging with their application across different device types."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Solution:"})," Use the ",(0,i.jsx)(s.code,{children:"stats"})," command with the ",(0,i.jsx)(s.code,{children:"distinct_count"})," function to count the number of unique users for each device type."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Implementation:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"index=app_usage sourcetype=user_sessions\n| stats dc(user_id) AS unique_users BY device_type\n| sort - unique_users\n"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Explanation"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"This query filters logs to those related to app usage and user sessions."}),"\n",(0,i.jsxs)(s.li,{children:["The ",(0,i.jsx)(s.code,{children:"stats"})," command calculates the distinct count of ",(0,i.jsx)(s.code,{children:"user_id"})," for each ",(0,i.jsx)(s.code,{children:"device_type"}),"."]}),"\n",(0,i.jsx)(s.li,{children:"Results are sorted in descending order of unique user count."}),"\n",(0,i.jsx)(s.li,{children:"The output will show each device type and its corresponding number of unique users, helping understand user engagement across different devices."}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"varpvalue",children:(0,i.jsx)(s.strong,{children:"varp(<value>)"})}),"\n",(0,i.jsx)(s.p,{children:"This function returns the population variance of the values in a field."}),"\n",(0,i.jsx)(s.h3,{id:"usage-7",children:"Usage"}),"\n",(0,i.jsxs)(s.p,{children:["You can use this function with the ",(0,i.jsx)(s.code,{children:"stats"})," and ",(0,i.jsx)(s.code,{children:"timechart"})," commands.",(0,i.jsx)(s.br,{}),"\n","The field must contain numeric values."]}),"\n",(0,i.jsx)(s.h3,{id:"example-7",children:"Example"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Calculate the population variance of the ",(0,i.jsx)(s.code,{children:"latency"})," field:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | stats varp(latency)\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"For each city, calculate the variance of response time:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | stats varp(latency) AS LatencyVariance BY city\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"The following example displays a timechart of population variance of latency over time:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | timechart span=1h varp(latency) BY city\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"use-case-example-7",children:"Use-Case Example"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Analyze Latency Stability Across Cities"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Problem:"})," A site reliability engineer wants to understand how stable network latency is across different cities."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Solution:"})," Use the ",(0,i.jsx)(s.code,{children:"stats"})," command with the ",(0,i.jsx)(s.code,{children:"varp"})," function to calculate the population variance of the ",(0,i.jsx)(s.code,{children:"latency"})," field for each city."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Implementation:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"index=server_metrics sourcetype=latency_logs\n| stats varp(latency) AS LatencyVariance BY city\n| sort - LatencyVariance\n"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Explanation"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["This query calculates the population variance of ",(0,i.jsx)(s.code,{children:"latency"})," for each ",(0,i.jsx)(s.code,{children:"city"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["The ",(0,i.jsx)(s.code,{children:"stats"})," command aggregates variance per city to help identify regions with inconsistent network behavior."]}),"\n",(0,i.jsx)(s.li,{children:"A high variance suggests that latency is fluctuating significantly, possibly indicating infrastructure or routing issues."}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"latestvalue",children:(0,i.jsx)(s.strong,{children:"latest(<value>)"})}),"\n",(0,i.jsx)(s.p,{children:"This function returns the most recently seen value in a field, based on timestamp order."}),"\n",(0,i.jsx)(s.h3,{id:"usage-8",children:"Usage"}),"\n",(0,i.jsxs)(s.p,{children:["You can use this function with the ",(0,i.jsx)(s.code,{children:"stats"})," and ",(0,i.jsx)(s.code,{children:"timechart"})," commands.",(0,i.jsx)(s.br,{}),"\n","The field is evaluated based on event time and the latest value is picked chronologically."]}),"\n",(0,i.jsx)(s.h3,{id:"example-8",children:"Example"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Return the most recent ",(0,i.jsx)(s.code,{children:"zip"})," value across all events:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | stats latest(zip)\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["For each ",(0,i.jsx)(s.code,{children:"city"}),", show the latest observed ",(0,i.jsx)(s.code,{children:"http_status"}),":"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | stats latest(http_status) AS LatestStatus BY city\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["The following example displays a timechart of the latest ",(0,i.jsx)(s.code,{children:"job_title"})," value by city over time:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | timechart span=1h latest(job_title) BY city\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"use-case-example-8",children:"Use-Case Example"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Track the Most Recent Job Title Seen Per City"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Problem:"})," A recruiter wants to monitor which job titles are most recently observed in various cities based on user activity."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Solution:"})," Use the ",(0,i.jsx)(s.code,{children:"stats"})," command with the ",(0,i.jsx)(s.code,{children:"latest"})," function to get the last recorded job title for each city."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Implementation:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"index=users sourcetype=activity_logs\n| stats latest(job_title) AS LatestJobTitle BY city\n| sort city\n"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Explanation"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["The ",(0,i.jsx)(s.code,{children:"latest"})," function picks the most recent ",(0,i.jsx)(s.code,{children:"job_title"})," for each ",(0,i.jsx)(s.code,{children:"city"})," based on event timestamp."]}),"\n",(0,i.jsx)(s.li,{children:"This helps track shifting trends in job-related data across different locations."}),"\n",(0,i.jsxs)(s.li,{children:["Sorting by ",(0,i.jsx)(s.code,{children:"city"})," allows for easy scanning of geographic patterns."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"latest_timevalue",children:(0,i.jsx)(s.strong,{children:"latest_time(<value>)"})}),"\n",(0,i.jsx)(s.p,{children:"This function returns the UNIX timestamp of the most recent occurrence of a value in a field."}),"\n",(0,i.jsx)(s.h3,{id:"usage-9",children:"Usage"}),"\n",(0,i.jsxs)(s.p,{children:["You can use this function with the ",(0,i.jsx)(s.code,{children:"stats"})," and ",(0,i.jsx)(s.code,{children:"timechart"})," commands.",(0,i.jsx)(s.br,{}),"\n","It is helpful for tracking the last time a value appeared in event data or metrics."]}),"\n",(0,i.jsx)(s.h3,{id:"example-9",children:"Example"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Show the last time each ",(0,i.jsx)(s.code,{children:"http_status"})," was seen:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | stats latest_time(http_status) AS LastSeenTime BY http_status\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Get the latest timestamp when each ",(0,i.jsx)(s.code,{children:"job_company"})," was mentioned:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | stats latest_time(job_company) AS LastMentionedTime\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Display a timechart of the last time ",(0,i.jsx)(s.code,{children:"user_color"})," was seen by city:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | timechart span=1h latest_time(user_color) BY city\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"use-case-example-9",children:"Use-Case Example"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Determine When Each Job Title Was Last Observed"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Problem:"})," An HR analyst wants to know when a specific ",(0,i.jsx)(s.code,{children:"job_title"})," was last recorded in the logs for each city."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Solution:"})," Use the ",(0,i.jsx)(s.code,{children:"latest_time"})," function with ",(0,i.jsx)(s.code,{children:"stats"})," to retrieve the most recent timestamp for each job title seen in various cities."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Implementation:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"index=users sourcetype=activity_logs\n| stats latest_time(job_title) AS LastSeenJobTime BY city\n| sort city\n"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Explanation"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["The ",(0,i.jsx)(s.code,{children:"latest_time()"})," function extracts the most recent time a ",(0,i.jsx)(s.code,{children:"job_title"})," appeared in the dataset for each city."]}),"\n",(0,i.jsx)(s.li,{children:"This helps monitor the recency of different job-related activities across regions."}),"\n",(0,i.jsx)(s.li,{children:"Results are sorted for easy comparison by city."}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"earliestvalue",children:(0,i.jsx)(s.strong,{children:"earliest(<value>)"})}),"\n",(0,i.jsx)(s.p,{children:"This function returns the earliest observed value in a field based on chronological order."}),"\n",(0,i.jsx)(s.h3,{id:"usage-10",children:"Usage"}),"\n",(0,i.jsxs)(s.p,{children:["You can use this function with the ",(0,i.jsx)(s.code,{children:"stats"})," and ",(0,i.jsx)(s.code,{children:"timechart"})," commands.",(0,i.jsx)(s.br,{}),"\n","This function processes values in the order of event time and selects the first one seen."]}),"\n",(0,i.jsx)(s.h3,{id:"example-10",children:"Example"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Return the earliest observed ",(0,i.jsx)(s.code,{children:"user_color"})," value:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | stats earliest(user_color)\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["For each ",(0,i.jsx)(s.code,{children:"city"}),", find the first ",(0,i.jsx)(s.code,{children:"http_method"})," used:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | stats earliest(http_method) AS FirstMethod BY city\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Display a timechart of the earliest ",(0,i.jsx)(s.code,{children:"job_title"})," seen over time for each city:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | timechart span=1h earliest(job_title) BY city\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"use-case-example-10",children:"Use-Case Example"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Identify the First Job Title Recorded Per City"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Problem:"})," A data analyst wants to track the earliest job title recorded for users in each city."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Solution:"})," Use the ",(0,i.jsx)(s.code,{children:"stats"})," command with the ",(0,i.jsx)(s.code,{children:"earliest"})," function to extract the chronologically first job title seen in each location."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Implementation:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"index=users sourcetype=activity_logs\n| stats earliest(job_title) AS FirstSeenJob BY city\n| sort city\n"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Explanation"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["The ",(0,i.jsx)(s.code,{children:"earliest()"})," function finds the first value observed for ",(0,i.jsx)(s.code,{children:"job_title"})," by timestamp."]}),"\n",(0,i.jsx)(s.li,{children:"It is useful for detecting original data points, like first-seen users or starting values in time series."}),"\n",(0,i.jsx)(s.li,{children:"Sorting by city allows clear inspection of regional first-occurrence trends."}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"earliest_timevalue",children:(0,i.jsx)(s.strong,{children:"earliest_time(<value>)"})}),"\n",(0,i.jsx)(s.p,{children:"This function returns the UNIX timestamp of the earliest-seen occurrence of a value in a field."}),"\n",(0,i.jsx)(s.h3,{id:"usage-11",children:"Usage"}),"\n",(0,i.jsxs)(s.p,{children:["You can use this function with the ",(0,i.jsx)(s.code,{children:"stats"})," and ",(0,i.jsx)(s.code,{children:"timechart"})," commands.",(0,i.jsx)(s.br,{}),"\n","This function outputs numeric UNIX time and is useful in time-based aggregations."]}),"\n",(0,i.jsx)(s.h3,{id:"example-11",children:"Example"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Get the earliest timestamp when each ",(0,i.jsx)(s.code,{children:"http_method"})," was seen:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | stats earliest_time(http_method) AS FirstSeenTime BY http_method\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["For each ",(0,i.jsx)(s.code,{children:"job_title"}),", return when it was first observed:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | stats earliest_time(job_title) AS FirstTimestamp BY job_title\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Display a timechart of earliest occurrence of each ",(0,i.jsx)(s.code,{children:"user_color"}),":"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | timechart span=1h earliest_time(user_color) BY user_color\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"use-case-example-11",children:"Use-Case Example"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Monitor First Appearance of HTTP Methods"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Problem:"})," A security analyst wants to monitor when each type of HTTP method (e.g., POST, GET) was first observed in logs."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Solution:"})," Use the ",(0,i.jsx)(s.code,{children:"stats"})," command with ",(0,i.jsx)(s.code,{children:"earliest_time()"})," to find the first UNIX timestamp for each method."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Implementation:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"index=web sourcetype=access_combined\n| stats earliest_time(http_method) AS FirstObservedTime BY http_method\n| convert ctime(FirstObservedTime)\n"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Explanation"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["This query aggregates the earliest seen time (in UNIX epoch) for each distinct ",(0,i.jsx)(s.code,{children:"http_method"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["The ",(0,i.jsx)(s.code,{children:"convert ctime()"})," command formats the timestamp into a readable format."]}),"\n",(0,i.jsx)(s.li,{children:"This helps track the timeline of request types appearing in your system logs."}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"sumsqvalue",children:(0,i.jsx)(s.strong,{children:"sumsq(<value>)"})}),"\n",(0,i.jsxs)(s.p,{children:["This function returns the ",(0,i.jsx)(s.strong,{children:"sum of the squares"})," of values in a numeric field."]}),"\n",(0,i.jsx)(s.h3,{id:"usage-12",children:"Usage"}),"\n",(0,i.jsxs)(s.p,{children:["You can use this function with the ",(0,i.jsx)(s.code,{children:"stats"}),", ",(0,i.jsx)(s.code,{children:"timechart"}),", and ",(0,i.jsx)(s.code,{children:"chart"})," commands.",(0,i.jsx)(s.br,{}),"\n","It is often used to evaluate the variance of a dataset. A large sum of squares indicates wide fluctuation from the mean."]}),"\n",(0,i.jsx)(s.h3,{id:"example-12",children:"Example"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Calculate the sum of squares of ",(0,i.jsx)(s.code,{children:"latency"})," values:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | stats sumsq(latency)\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["For each ",(0,i.jsx)(s.code,{children:"city"}),", calculate the sum of squared latencies:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | stats sumsq(latency) AS LatencySquareSum BY city\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Show a timechart of ",(0,i.jsx)(s.code,{children:"sumsq(latency)"})," per city every hour:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"... | timechart span=1h sumsq(latency) BY city\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"use-case-example-12",children:"Use-Case Example"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Measure Network Latency Variance Across Locations"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Problem:"})," A network engineer wants to identify cities with high fluctuations in latency over time."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Solution:"})," Use the ",(0,i.jsx)(s.code,{children:"sumsq()"})," function to calculate the squared sum of ",(0,i.jsx)(s.code,{children:"latency"})," values by city, which can help in determining variance trends."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Implementation:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"index=server_metrics sourcetype=latency_logs\n| stats sumsq(latency) AS LatencyFluctuation BY city\n| sort - LatencyFluctuation\n"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Explanation"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["This query computes the sum of squares of the ",(0,i.jsx)(s.code,{children:"latency"})," field grouped by each ",(0,i.jsx)(s.code,{children:"city"}),"."]}),"\n",(0,i.jsx)(s.li,{children:"Larger values indicate cities where latency fluctuates significantly from the average."}),"\n",(0,i.jsx)(s.li,{children:"This insight can be used for troubleshooting unstable regions in the network."}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"percpercentilevalue",children:(0,i.jsx)(s.strong,{children:"perc<percentile>(<value>)"})}),"\n",(0,i.jsx)(s.h3,{id:"description",children:"Description"}),"\n",(0,i.jsx)(s.p,{children:"The percentile functions return the Nth percentile value of the numeric field <value>. You can think of this as an estimate of where the top percentile starts. For example, a 95th percentile says that 95% of the values in field Y are below the estimate and 5% of the values in field <value> are above the estimate."}),"\n",(0,i.jsx)(s.p,{children:"Valid percentile values are floating point numbers between 0 and 100 (inclusive), such as 99.95."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Function"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsx)(s.tbody,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsxs)(s.td,{children:[(0,i.jsx)(s.code,{children:"perc<percentile>(<value>)"})," or ",(0,i.jsx)(s.code,{children:"p<percentile>(<value>)"})]}),(0,i.jsx)(s.td,{children:"Use the perc function to calculate an approximate threshold, such that of the values in field Y, X percent fall below the threshold. The perc function returns a single number that represents the lower end of the approximate values for the percentile requested."})]})})]}),"\n",(0,i.jsx)(s.p,{children:"The percentile functions process field values as strings"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Note:"})," The ",(0,i.jsx)(s.strong,{children:"perc"})," and ",(0,i.jsx)(s.strong,{children:"upperperc"})," functions are nondeterministic, which means that subsequent searches using these functions over identical data can return variances in their results."]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"usage-13",children:"Usage"}),"\n",(0,i.jsxs)(s.p,{children:["You can use this function with the ",(0,i.jsx)(s.a,{href:"/siglens-docs/spl-docs/stats-command",children:"stats"})," and ",(0,i.jsx)(s.a,{href:"/siglens-docs/spl-docs/timechart-command",children:"timechart"})," commands."]}),"\n",(0,i.jsx)(s.h3,{id:"differences-between-siglens-and-excel-percentile-algorithms",children:"Differences between SigLens and Excel percentile algorithms"}),"\n",(0,i.jsxs)(s.p,{children:["If there are less than 1000 distinct values, the SigLens percentile functions use the nearest rank algorithm. See ",(0,i.jsx)("a",{href:"http://en.wikipedia.org/wiki/Percentile#Nearest_rank",target:"_blank",rel:"noopener",children:"Nearest Rank"}),". Excel uses the NIST interpolated algorithm, which basically means you can get a value for a percentile that does not exist in the actual data, which is not possible for the nearest rank approach."]}),"\n",(0,i.jsx)(s.h3,{id:"siglens-algorithm-with-more-than-1000-distinct-values",children:"SigLens algorithm with more than 1000 distinct values"}),"\n",(0,i.jsx)(s.p,{children:"If there are more than 1000 distinct values for the field, the percentiles are approximated using a radix-tree digest-based algorithm. This algorithm is much faster and uses much less memory, a constant amount, than an exact computation, which uses memory in linear relation to the number of distinct values. By default this approach limits the approximation error to < 1% of rank error. That means if you ask for 95th percentile, the number you get back is between the 94th and 96th percentile."}),"\n",(0,i.jsx)(s.h3,{id:"basic-examples",children:"Basic examples"}),"\n",(0,i.jsxs)(s.p,{children:["Consider this list of values ",(0,i.jsx)(s.code,{children:"Y = {10,9,8,7,6,5,4,3,2,1}"}),"."]}),"\n",(0,i.jsx)(s.p,{children:"The following example returns 5.5."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"...| stats perc50(Y)\n"})}),"\n",(0,i.jsx)(s.p,{children:"The following example returns 9.55."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-spl",children:"...| stats perc95(Y)\n"})}),"\n",(0,i.jsx)(s.h2,{id:"medianvalue",children:(0,i.jsx)(s.strong,{children:"median(<value>)"})}),"\n",(0,i.jsx)(s.h3,{id:"description-1",children:"Description"}),"\n",(0,i.jsx)(s.p,{children:"Returns the middle-most value of the field specified."}),"\n",(0,i.jsx)(s.h3,{id:"usage-14",children:"Usage"}),"\n",(0,i.jsxs)(s.p,{children:["You can use this function with the ",(0,i.jsx)(s.a,{href:"/siglens-docs/spl-docs/stats-command",children:"stats"})," and ",(0,i.jsx)(s.a,{href:"/siglens-docs/spl-docs/timechart-command",children:"timechart"})," commands."]}),"\n",(0,i.jsx)(s.p,{children:"If you have an even number of events, by default the median calculation is approximated to the higher of the two values."}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Note:"})," This function behaves the same way as ",(0,i.jsx)(s.code,{children:"perc50/p50"}),"."]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"basic-examples-1",children:"Basic examples"}),"\n",(0,i.jsx)(s.p,{children:"Consider the following list of values, which counts the number of different customers who purchased something from the Buttercup Games online store yesterday. The values are organized by the type of product (accessories, t-shirts, and type of games) that customers purchased."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"categoryId"}),(0,i.jsx)(s.th,{children:"count"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"ACCESSORIES"}),(0,i.jsx)(s.td,{children:"37"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"ARCADE"}),(0,i.jsx)(s.td,{children:"58"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"NULL"}),(0,i.jsx)(s.td,{children:"8"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"SIMULATION"}),(0,i.jsx)(s.td,{children:"34"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"SPORTS"}),(0,i.jsx)(s.td,{children:"13"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"STRATEGY"}),(0,i.jsx)(s.td,{children:"74"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"TEE"}),(0,i.jsx)(s.td,{children:"38"})]})]})]}),"\n",(0,i.jsx)(s.p,{children:"When the list is sorted the median, or middle-most value, is 37."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"categoryId"}),(0,i.jsx)(s.th,{children:"count"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"NULL"}),(0,i.jsx)(s.td,{children:"8"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"SPORTS"}),(0,i.jsx)(s.td,{children:"13"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"SIMULATION"}),(0,i.jsx)(s.td,{children:"34"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"ACCESSORIES"}),(0,i.jsx)(s.td,{children:"37"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"TEE"}),(0,i.jsx)(s.td,{children:"38"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"ARCADE"}),(0,i.jsx)(s.td,{children:"58"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"STRATEGY"}),(0,i.jsx)(s.td,{children:"74"})]})]})]})]})}function o(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1151:(e,s,n)=>{n.d(s,{Z:()=>r,a:()=>a});var i=n(7294);const t={},l=i.createContext(t);function a(e){const s=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(l.Provider,{value:s},e.children)}}}]);